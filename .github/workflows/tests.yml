name: Run Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
      TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
      TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
      TEST_DB_PASS: ${{ secrets.TEST_DB_PASS }}
      TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_USER: ${{ secrets.DB_USER }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASS }}
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi --no-root
    - name: Run tests with pytest
      run: |
        pytest -v --cov=app/ --benchmark-verbose
